<?xml version="1.0" encoding="UTF-8"?>
<chapter id="chapter-idp-guide"
	xmlns="http://docbook.org/ns/docbook" version="5.0"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xl="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://docbook.org/ns/docbook https://www.docbook.org/xml/5.0/xsd/docbook.xsd
		http://www.w3.org/1999/xlink https://www.docbook.org/xml/5.0/xsd/xlink.xsd">
	<title>Integrating Identity Providers</title>
	<para>Section provides additional information regarding integration of Spring SAML with popular Identity Providers.</para>

	<section>
		<title>Active Directory Federation Services 2.0 (AD FS)</title>

			<para>AD FS 2.0 supports SAML 2.0 in IDP mode and can be easily integrated with SAML Extension for both SSO and SLO.
			Before starting with the configuration make sure that the following pre-requisites are satisfied:</para>
			<para><itemizedlist spacing="compact">
					<listitem>
						<para>Install AD FS 2.0 (https://www.microsoft.com/en-us/download/details.aspx?id=10909)</para>
					</listitem>
					<listitem>
						<para>Run AD FS 2.0 Federation Server Configuration Wizard in the AD FS 2.0 Management Console</para>
					</listitem>
					<listitem>
						<para>Make sure that DNS name of your Windows Server is available at your SP and vice versa</para>
					</listitem>
					<listitem>
						<para>Install a Java container (e.g. Tomcat) for deployment of the SAML 2 Extension</para>
					</listitem>
					<listitem>
						<para>Configure your container to use HTTPS, this is required by AD FS (<ulink url="https://tomcat.apache.org/tomcat-6.0-doc/ssl-howto.html">https://tomcat.apache.org/tomcat-6.0-doc/ssl-howto.html</ulink>)</para>
					</listitem>
				</itemizedlist></para>

			<section id="chapter-idp-guide-adfs-idp">
			<title>Initialize IDP metadata</title>
			<para><itemizedlist spacing="compact">
					<listitem>
						<para>Download AD FS 2.0 metadata from e.g. <emphasis>https://adfsserver/FederationMetadata/2007-06/FederationMetadata.xml</emphasis></para>
					</listitem>
					<listitem>
						<para>Store the downloaded content to <emphasis>sample/src/main/resources/metadata/FederationMetadata.xml</emphasis></para>
					</listitem>
					<listitem>
						<para>Modify bean <emphasis>metadata</emphasis> in <emphasis>sample/src/main/webapp/WEB-INF/securityContext.xml</emphasis> and replace <emphasis>classpath:security/idp.xml</emphasis> with <emphasis>classpath:security/FederationMetadata.xml</emphasis> and add property <emphasis>metadataTrustCheck</emphasis> to <emphasis>false</emphasis> to skip signature validation:
<programlisting><![CDATA[<bean class="org.springframework.security.saml.metadata.ExtendedMetadataDelegate">
	<constructor-arg>
		<bean class="org.opensaml.saml2.metadata.provider.ResourceBackedMetadataProvider">
			<constructor-arg>
				<bean class="java.util.Timer"/>
			</constructor-arg>
			<constructor-arg>
				<bean class="org.opensaml.util.resource.ClasspathResource">
					<constructor-arg value="/metadata/FederationMetadata.xml"/>
				</bean>
			</constructor-arg>
			<property name="parserPool" ref="parserPool"/>
		</bean>
	</constructor-arg>
	<constructor-arg>
		<bean class="org.springframework.security.saml.metadata.ExtendedMetadata"/>
	</constructor-arg>
	<property name="metadataTrustCheck" value="false"/>
</bean>]]></programlisting>
					</para>
				</listitem>
			</itemizedlist></para>
		</section>

		<section id="chapter-idp-guide-adfs-sp">
		<title>Initialize SP metadata</title>
		<para><itemizedlist spacing="compact">
				<listitem>
					<para>Deploy SAML 2 Extension war archive from <emphasis>sample/target/spring-security-saml2-sample.war</emphasis>, or use embedded Tomcat with command: <emphasis>mvn tomcat7:run</emphasis></para>
				</listitem>
				<listitem>
					<para>Open Spring SAML in browser, e.g. at https://localhost:8443/spring-security-saml2-sample, making sure to use HTTPS protocol</para>
				</listitem>
				<listitem>
					<para>Click Metadata Administration, login and select item with your server name from the Service providers list</para>
				</listitem>
				<listitem>
					<para>Store content of the Metadata field to a document metadata.xml and upload it to the AD FS server</para>
				</listitem>
				<listitem>
					<para>In AD FS 2.0 Management Console select "Add Relying Party Trust"</para>
				</listitem>
				<listitem>
					<para>Select "Import data about the relying party from a file" and select the metadata.xml file created earlier. Select Next</para>
				</listitem>
				<listitem>
					<para>The wizard may complain that some content of metadata is not supported. You can safely ignore this warning</para>
				</listitem>
				<listitem>
					<para>Continue with the wizard. On the "Ready to Add Trust" make sure that tab endpoints contains multiple endpoint values. If not, verify that your metadata was generated with HTTPS protocol URLs</para>
				</listitem>
				<listitem>
					<para>Leave "Open the Edit Claim Rules dialog" checkbox checked and finish the wizard</para>
				</listitem>
				<listitem>
					<para>Select "Add Rule", choose "Send LDAP Attributes as Claims" and press Next</para>
				</listitem>
				<listitem>
					<para>Add NameID as "Claim rule name", choose "Active Directory" as Attribute store, choose "SAM-Account-Name" as LDAP Attribute and "Name ID" as "Outgoing claim type", finish the wizard and confirm the claim rules window, in ADFS 3.0 you might need to configure the Name ID as a Pass Through claim</para>
				</listitem>
				<listitem>
					<para>Open the provider by double-clicking it, select tab Advanced and change "Secure hash algorithm" to SHA-1</para>
				</listitem>
			</itemizedlist></para>
		</section>

		<section id="chapter-idp-guide-adfs-test">
		<title>Test SSO</title>
		<para>Open the Spring SAML sample application at e.g. https://localhost:8443/spring-security-saml2-sample, select your AD FS server and press login. In case Artifact binding
		is used and SSL/TLS certificate of your AD FS is not already trusted, import it to your samlKeystore.jks by following instructions in the
		error report.</para>
		</section>
	</section>

	<section>
		<title>Okta</title>

		<para>Okta supports single sign-on to customer specified SAML 2.0 Service Provider applications, such as Spring SAML Extension.
			Before starting with the configuration make sure that the following pre-requisites are satisfied:</para>
		<para><itemizedlist spacing="compact">
			<listitem>
				<para>Have an Okta instance and administration account ready, Okta license must allow you to add custom applications</para>
			</listitem>
			<listitem>
				<para>Install a Java container (e.g. Tomcat) for deployment of the SAML 2 Extension</para>
			</listitem>
		</itemizedlist></para>

		<section id="chapter-idp-guide-okta-sp">
			<title>Deploy Spring SAML sample application</title>
			<para><itemizedlist spacing="compact">
				<listitem>
					<para>Deploy SAML 2 Extension war archive from <emphasis>sample/target/spring-security-saml2-sample.war</emphasis>, or use embedded Tomcat with command: <emphasis>mvn tomcat7:run</emphasis></para>
				</listitem>
				<listitem>
					<para>Open Spring SAML in browser, e.g. at http://localhost:8080/spring-security-saml2-sample</para>
				</listitem>
				<listitem>
					<para>Click Metadata Administration, login and select item with your server name from the Service providers</para>
				</listitem>
				<listitem>
					<para>Note the <emphasis>Entity ID field</emphasis>, and <emphasis>Assertion Consumer Service URL (ACS)</emphasis> from the metadata XML, e.g. <emphasis>http://localhost:8080/spring-security-saml2-sample/saml/SSO</emphasis></para>
				</listitem>
			</itemizedlist></para>
			<para>Information such as entity ID and URLs of your Spring SAML can be customized, see <xref linkend="configuration-metadata-sp"/> for details.</para>
		</section>

		<section id="chapter-idp-guide-okta-idp">
			<title>Configure Okta</title>
			<para><itemizedlist spacing="compact">
				<listitem>
					<para>Login to Okta as an administrator, select <emphasis>Admin</emphasis>, select <emphasis>Applications</emphasis> and click <emphasis>Create New App</emphasis></para>
				</listitem>
				<listitem>
					<para>From the list of supported protocols select SAML 2.0 and press <emphasis>Create</emphasis></para>
				</listitem>
				<listitem>
					<para>Define app name (e.g. Spring SAML), optionally define app image and press <emphasis>Next</emphasis></para>
				</listitem>
				<listitem>
					<para>Configure SAML with the following settings:</para>
					<para>
						<table id="chapter-idp-guide-okta-settings">
							<tgroup cols="2">
								<colspec colname="_1" colwidth="0.5*" align="left"/>
								<colspec colname="_2" colwidth="1.0*" align="left"/>
								<tbody>
									<row>
										<entry>Single Sign on URL</entry>
										<entry>Use value noted during Spring SAML initialization, e.g. <emphasis>http://localhost:8080/spring-security-saml2-sample/saml/SSO</emphasis></entry>
									</row>
									<row>
										<entry>Audience URI (SP Entity ID)</entry>
										<entry>Use value noted during Spring SAML initialization, e.g. <emphasis>http://localhost:8080/spring-security-saml2-sample/saml/metadata</emphasis></entry>
									</row>
									<row>
										<entry>Default RelayState</entry>
										<entry>Leave empty, unless you require Okta to provide a value to Spring SAML</entry>
									</row>
									<row>
										<entry>Name ID format</entry>
										<entry>Select any of the available options, depending on your requirements</entry>
									</row>
									<row>
										<entry>Application username</entry>
										<entry>Select any of the available options, depending on your requirements</entry>
									</row>
									<row>
										<entry>Response (advanced settings)</entry>
										<entry>Select "signed"</entry>
									</row>
									<row>
										<entry>Assertion (advanced settings)</entry>
										<entry>Select "signed"</entry>
									</row>
									<row>
										<entry>Authentication context class (advanced settings)</entry>
										<entry>Select any of the available options</entry>
									</row>
									<row>
										<entry>Request compression (advanced settings)</entry>
										<entry>Select "Uncompressed"</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					</para>
				</listitem>
				<listitem>
					<para>Optionally define attributes to be sent to Spring SAML after single sign-on, and press <emphasis>Next</emphasis></para>
				</listitem>
				<listitem>
					<para>On Feedback page select "This is an internal application that we created" and press <emphasis>Finish</emphasis></para>
				</listitem>
				<listitem>
					<para>Make sure to distribute the newly created application to users you want to use for testing</para>
				</listitem>
			</itemizedlist></para>
			</section>

			<section id="chapter-idp-guide-okta-spring-import">
				<title>Import Okta metadata to Spring SAML</title>
				<para><itemizedlist spacing="compact">
				<listitem>
					<para>In Okta click link "Identity provider metadata" and store the downloaded content to <emphasis>sample/src/main/resources/metadata/okta.xml</emphasis></para>
				</listitem>
				<listitem>
					<para>In Spring SAML modify bean <emphasis>metadata</emphasis> in <emphasis>sample/src/main/webapp/WEB-INF/securityContext.xml</emphasis> and replace <emphasis>classpath:security/idp.xml</emphasis> with <emphasis>classpath:security/okta.xml</emphasis>:
						<programlisting><![CDATA[<bean class="org.springframework.security.saml.metadata.ExtendedMetadataDelegate">
    <constructor-arg>
        <bean class="org.opensaml.saml2.metadata.provider.ResourceBackedMetadataProvider">
            <constructor-arg>
                <bean class="java.util.Timer"/>
            </constructor-arg>
            <constructor-arg>
                <bean class="org.opensaml.util.resource.ClasspathResource">
                    <constructor-arg value="/metadata/okta.xml"/>
                </bean>
            </constructor-arg>
            <property name="parserPool" ref="parserPool"/>
        </bean>
    </constructor-arg>
    <constructor-arg>
        <bean class="org.springframework.security.saml.metadata.ExtendedMetadata"/>
    </constructor-arg>
</bean>]]></programlisting>
					</para>
				</listitem>
				<listitem>
					<para>Restart Spring SAML for the changes to get applied</para>
				</listitem>
			</itemizedlist></para>
		</section>

		<section id="chapter-idp-guide-okta-test">
			<title>Test SSO</title>
			<para>Open the Spring SAML sample application at e.g. http://localhost:8080/spring-security-saml2-sample, select your Okta server and press login. Alternatively start IDP-initialized
			single sign-on using <emphasis>App Embed Link</emphasis> provided by Okta in application configuration, e.g. <emphasis>https://v7security.okta.com/home/v7security_springsaml_1/0oa4vkeakAsUtZ8AI0y6/39139</emphasis>.</para>
		</section>
	</section>
    
    <!-- TODO
	IDP integration
	- integration with Shibboleth
	- integration with OpenAM
    - integration with Ping
	- integration with VMWare Horizon
      -->

</chapter>
